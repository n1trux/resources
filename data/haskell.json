{
    "title": "Haskell",
    "url": "https://github.com/krispo/awesome-haskell",
    "readme": "https://raw.githubusercontent.com/krispo/awesome-haskell/master/README.md",
    "headingLevel": 2,
    "name": "haskell",
    "sections": [
        {
            "title": "_Basics",
            "name": "_basics"
        },
        {
            "title": "Algorithmics",
            "name": "algorithmics"
        },
        {
            "title": "Audio, Music & Sound",
            "name": "audio-music-sound"
        },
        {
            "title": "Category Theory",
            "name": "category-theory"
        },
        {
            "title": "Compilers",
            "name": "compilers"
        },
        {
            "title": "Concurrency & Parallelism",
            "name": "concurrency-parallelism"
        },
        {
            "title": "Cryptography & Hashing",
            "name": "cryptography-hashing"
        },
        {
            "title": "Data Access",
            "name": "data-access"
        },
        {
            "title": "Data Formats",
            "name": "data-formats"
        },
        {
            "title": "Data Science",
            "name": "data-science"
        },
        {
            "title": "Data Structures",
            "name": "data-structures"
        },
        {
            "title": "Database",
            "name": "database"
        },
        {
            "title": "Development Tools",
            "name": "development-tools"
        },
        {
            "title": "Distributed Computing",
            "name": "distributed-computing"
        },
        {
            "title": "Documentation",
            "name": "documentation"
        },
        {
            "title": "Editors",
            "name": "editors"
        },
        {
            "title": "Extensions",
            "name": "extensions"
        },
        {
            "title": "Games",
            "name": "games"
        },
        {
            "title": "GUI",
            "name": "gui"
        },
        {
            "title": "Graphics",
            "name": "graphics"
        },
        {
            "title": "Network",
            "name": "network"
        },
        {
            "title": "Number Theory",
            "name": "number-theory"
        },
        {
            "title": "Web / Frameworks",
            "name": "web-frameworks"
        },
        {
            "title": "Text Processing",
            "name": "text-processing"
        },
        {
            "title": "Messaging",
            "name": "messaging"
        },
        {
            "title": "Languages",
            "name": "languages"
        },
        {
            "title": "Operating Systems",
            "name": "operating-systems"
        },
        {
            "title": "Platforms",
            "name": "platforms"
        },
        {
            "title": "Programming",
            "name": "programming"
        },
        {
            "title": "Science",
            "name": "science"
        },
        {
            "title": "Streaming Processing",
            "name": "streaming-processing"
        },
        {
            "title": "Websites",
            "name": "websites"
        },
        {
            "title": "Community",
            "name": "community"
        },
        {
            "title": "Courses",
            "name": "courses"
        },
        {
            "title": "Packages",
            "name": "packages"
        },
        {
            "title": "Tutorials",
            "name": "tutorials"
        }
    ],
    "data": "Awesome Haskell\n=============\n\nA curated list of awesome Haskell frameworks, libraries and software. Inspired by [awesome](https://github.com/bayandin/awesome-awesomeness) projects line.\n\n- [Awesome Haskell](#awesome-haskell)\n    - [_Basics](#_basics)\n    - [Algorithmics](#algorithmics)\n    - [Audio, Music & Sound](#audio-music-sound)\n    - [Category Theory](#category-theory)\n    - [Compilers](#compilers)\n    - [Concurrency & Parallelism](#concurrency--parallelism)\n    - [Cryptography & Hashing](#cryptography--hashing)\n    - [Data Access](#data-access)\n    - [Data Formats](#data-formats)\n    - [Data Science](#data-science)\n    - [Database](#database)\n    - [Development Tools](#development-tools)\n    - [Documentation](#documentation)\n    - [Distributed Computing](#distributed-computing)\n    - [Editors](#editors)\n    - [Extensions](#extensions)\n    - [Games](#games)\n    - [GUI](#gui)\n    - [Graphics](#graphics)\n    - [Network](#network)\n    - [Number Theory](#number-theory)\n    - [Web / Frameworks](#web--frameworks)\n    - [Text Processing](#text-processing)\n    - [Messaging](#messaging)\n    - [Languages](#languages)\n    - [Operating Systems](#operating-systems)\n    - [Platforms](#platforms)\n    - [Programming](#programming)\n    - [Science](#science)\n    - [Streaming Processing](#streaming-processing)\n- [Resources](#resources)\n    - [Websites](#websites)\n    - [Community](#community)\n    - [Courses](#courses)\n    - [Packages](#packages)\n    - [Tutorials](#tutorials)\n\n\n## _Basics\n\n* [The Haskell Platform](http://www.haskell.org/platform/contents.html) - a comprehensive, robust development environment for programming in Haskell.\n* [GHC](http://www.haskell.org/ghc/) - the state-of-the-art optimizing native code compiler for Haskell.\n* [GHCi](http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci.html) - a bytecode interpreter and interactive REPL environment for Haskell.\n* [Cabal](http://www.haskell.org/cabal/) - a system for building and packaging Haskell libraries and programs. \n* [Haddock](http://www.haskell.org/haddock/) - a tool for automatically generating documentation from annotated Haskell source code.\n* [Happy](http://www.haskell.org/happy/) - The Parser Generator for Haskell.\n* [Alex](http://www.haskell.org/alex/) - a lexical analyser generator for Haskell.\n* [Hackage](http://hackage.haskell.org/) - the Haskell community's central package archive.\n* [Hoogle](http://www.haskell.org/hoogle/) - a Haskell API search engine, which allows you to search many standard Haskell libraries by either function name, or by approximate type signature.\n* [Hayoo](http://holumbus.fh-wedel.de/hayoo/hayoo.html) - will search all packages from Hackage, including all function and type definitions.\n\n## Algorithmics\n\n* [Theorem Provers](http://www.haskell.org/haskellwiki/Applications_and_libraries/Theorem_provers) - Official Website Resources.\n\n    ---\n* [Algorithm](http://hackage.haskell.org/packages/#cat:Algorithm) - a curated Hackage list.\n* [Algorithm Visualization](http://hackage.haskell.org/packages/#cat:Algorithm Visualization) - a curated Hackage list.\n* [Algorithms](http://hackage.haskell.org/packages/#cat:Algorithms) - a curated Hackage list.\n* [Compression](http://hackage.haskell.org/packages/#cat:Compression) - a curated Hackage list.\n* [Formal Languages](http://hackage.haskell.org/packages/#cat:Formal Languages) - a curated Hackage list.\n* [Formal Methods](http://hackage.haskell.org/packages/#cat:Formal Methods) - a curated Hackage list.\n* [Logic](http://hackage.haskell.org/packages/#cat:Logic) - a curated Hackage list.\n* [Logic Programming](http://hackage.haskell.org/packages/#cat:Logic Programming) - a curated Hackage list.\n* [Map Reduce](http://hackage.haskell.org/packages/#cat:MapReduce) - a curated Hackage list.\n* [Graphs](http://hackage.haskell.org/packages/#cat:Graphs) - a curated Hackage list.\n* [Optimization](http://hackage.haskell.org/packages/#cat:Optimization) - a curated Hackage list.\n* [Simulation](http://hackage.haskell.org/packages/#cat:Simulation) - a curated Hackage list.\n* [SMT](http://hackage.haskell.org/packages/#cat:SMT) - a curated Hackage list for Satisfiability Modulo Theories (SMT).\n* [Symbolic Computation](http://hackage.haskell.org/packages/#cat:Symbolic Computation) - a curated Hackage list.\n* [Theorem Provers](http://hackage.haskell.org/packages/#cat:Theorem Provers) - a curated Hackage list.\n\n## Audio, Music & Sound\n\n* [Audio, music and sound](http://www.haskell.org/haskellwiki/Applications_and_libraries/Music_and_sound) - official Website Resources.\n\n    ---\n* [Audio](http://hackage.haskell.org/packages/#cat:Audio) - a curated Hackage list.\n* [Codec](http://hackage.haskell.org/packages/#cat:Codec) - a curated Hackage list.\n* [Graphics](http://hackage.haskell.org/packages/#cat:Graphics) - a curated Hackage list.\n* [Media](http://hackage.haskell.org/packages/#cat:Media) - a curated Hackage list.\n* [Music](http://hackage.haskell.org/packages/#cat:Music) - a curated Hackage list.\n* [Sound](http://hackage.haskell.org/packages/#cat:Sound) - a curated Hackage list.\n\n\n## Category Theory\n\n* [Adjunctions](http://hackage.haskell.org/packages/#cat:Adjunctions) - a curated Hackage list.\n* [Algebra](http://hackage.haskell.org/packages/#cat:Algebra) - a curated Hackage list.\n* [Categories](http://hackage.haskell.org/packages/#cat:Categories) - a curated Hackage list.\n* [Combinators](http://hackage.haskell.org/packages/#cat:Combinators) - a curated Hackage list.\n* [Comonads](http://hackage.haskell.org/packages/#cat:Comonads) - a curated Hackage list.\n* [Compisition](http://hackage.haskell.org/packages/#cat:Composition) - a curated Hackage list.\n* [Computer Algebra](http://hackage.haskell.org/packages/#cat:Computer Algebra) - a curated Hackage list.\n* [Constraints](http://hackage.haskell.org/packages/#cat:Constraints) - a curated Hackage list.\n* [Functors](http://hackage.haskell.org/packages/#cat:Functors) - a curated Hackage list.\n* [Monad](http://hackage.haskell.org/packages/#cat:Monad) - a curated Hackage list.\n* [Monads](http://hackage.haskell.org/packages/#cat:Monads) - a curated Hackage list.\n* [Semigroups](http://hackage.haskell.org/packages/#cat:Semigroups) - a curated Hackage list.\n\n## Compilers\n\n* [Compilers & Interpreters](http://www.haskell.org/haskellwiki/Applications_and_libraries/Compilers_and_interpreters) - Official Website Resources.\n* [Compiler construction, lexing, parsing, pretty printing](http://www.haskell.org/haskellwiki/Applications_and_libraries/Compiler_tools) - Official Website Resources.\n\n    ---\n* [Compiler](http://hackage.haskell.org/packages/#cat:Compiler) - a curated Hackage list.\n* [Compiler Plugin](http://hackage.haskell.org/packages/#cat:Compiler Plugin) - a curated Hackage list.\n* [Compilers/Interpreters](http://hackage.haskell.org/packages/#cat:Compilers/Interpreters) - a curated Hackage list.\n\n## Concurrency & Parallelism\n\n* [Concurrency & Parallelism](http://www.haskell.org/haskellwiki/Applications_and_libraries/Concurrency_and_parallelism) - Official Website Info.\n\n    ---\n* [Concurrency](http://hackage.haskell.org/packages/#cat:Concurrency) - a curated Hackage list.\n* [Concurrent](http://hackage.haskell.org/packages/#cat:Concurrent) - a curated Hackage list.\n* [Functional Reactive Programming](http://hackage.haskell.org/packages/#cat:FRP) - a curated Hackage list.\n* [Parallelism](http://hackage.haskell.org/packages/#cat:Parallelism) - a curated Hackage list.\n\n## Cryptography & Hashing\n\n* [Cryptography & Hashing](http://www.haskell.org/haskellwiki/Applications_and_libraries/Cryptography) - Official Website Resources.\n\n    ---\n* [Crypto](http://hackage.haskell.org/packages/#cat:Crypto) - a curated Hackage list.\n* [Cryptography](http://hackage.haskell.org/packages/#cat:Cryptography) - a curated Hackage list.\n\n\n## Data Access\n\n* [Haxl](https://github.com/facebook/Haxl) - a library for efficient, concurrent, concise data access.\n\n## Data Formats\n\n* [JSON](http://hackage.haskell.org/packages/#cat:JSON) - a curated Hackage list.\n* [PDF](http://hackage.haskell.org/packages/#cat:PDF) - a curated Hackage list.\n* [XML](http://hackage.haskell.org/packages/#cat:XML) - a curated Hackage list.\n* [RSS](http://hackage.haskell.org/packages/#cat:RSS) - a curated Hackage list.\n\n## Data Science\n* [Linguistics and natural language processing](http://www.haskell.org/haskellwiki/Applications_and_libraries/Linguistics) - Official Website Resources.\n* [Robotics](http://www.haskell.org/haskellwiki/Applications_and_libraries/Robotics) - Official Website Resources.\n\n    ---\n* [Artificial Intelligence](http://hackage.haskell.org/packages/#cat:AI) - a curated Hackage list.\n* [Argumentations](http://hackage.haskell.org/packages/#cat:Argumentation) - a curated Hackage list.\n* [Classification](http://hackage.haskell.org/packages/#cat:Classification) - a curated Hackage list.\n* [Clustering](http://hackage.haskell.org/packages/#cat:Clustering) - a curated Hackage list.\n* [Data Mining](http://hackage.haskell.org/packages/#cat:Data Mining) - a curated Hackage list.\n* [Datamining](http://hackage.haskell.org/packages/#cat:Datamining) - a curated Hackage list.\n* [Image Processing](http://hackage.haskell.org/packages/#cat:Image Processing) - a curated Hackage list.\n* [Machine Learning](http://hackage.haskell.org/packages/#cat:Machine Learning) - a curated Hackage list.\n* [Machine Vision](http://hackage.haskell.org/packages/#cat:Machine Vision) - a curated Hackage list.\n* [Natural Language Processing](http://hackage.haskell.org/packages/#cat:Natural Language Processing) - a curated Hackage list.\n* [Pattern Classification](http://hackage.haskell.org/packages/#cat:Pattern Classification) - a curated Hackage list.\n* [Pattern Recognition](http://hackage.haskell.org/packages/#cat:Pattern Recognition) - a curated Hackage list.\n* [Search](http://hackage.haskell.org/packages/#cat:Search) - a curated Hackage list.\n* [Statistics](http://hackage.haskell.org/packages/#cat:Statistics) - a curated Hackage list.\n* [Text Recognition](http://hackage.haskell.org/packages/#cat:Text Recognition) - a curated Hackage list.\n* [Robotics](http://hackage.haskell.org/packages/#cat:Robotics) - a curated Hackage list.\n\n## Data Structures\n* [Data Structures & IO Libraries](http://www.haskell.org/haskellwiki/Applications_and_libraries/Data_structures) - Official Website Resources.\n\n    ---\n* [Advanced Structures](http://hackage.haskell.org/packages/#cat:Structures) - a curated Hackage list.\n* [Bit Vectors](http://hackage.haskell.org/packages/#cat:Bit Vectors) - a curated Hackage list.\n* [Containers](http://hackage.haskell.org/packages/#cat:Containers) - a curated Hackage list.\n* [Data Structures](http://hackage.haskell.org/packages/#cat:Data Structures) - a curated Hackage list.\n* [Enumerator](http://hackage.haskell.org/packages/#cat:Enumerator) - a curated Hackage list.\n* [Generics](http://hackage.haskell.org/packages/#cat:Generics) - a curated Hackage list.\n* [List](http://hackage.haskell.org/packages/#cat:List) - a curated Hackage list.\n* [Tree](http://hackage.haskell.org/packages/#cat:Tree) - a curated Hackage list.\n* [Vector](http://hackage.haskell.org/packages/#cat:Vector) - a curated Hackage list.\n\n## Database\n* [Database Interfaces](http://www.haskell.org/haskellwiki/Applications_and_libraries/Database_interfaces) - Official Website Resources.\n\n    ---\n* [Database](http://hackage.haskell.org/packages/#cat:Database) - a curated Hackage list.\n\n## Development Tools\n* [Development Libraries and Tools](http://www.haskell.org/haskellwiki/Development_Libraries_and_Tools) - Official Website Resources.\n\n    ---\n* [Debug](http://hackage.haskell.org/packages/#cat:Debug) - a curated Hackage list.\n* [IDE](http://hackage.haskell.org/packages/#cat:IDE) - a curated Hackage list.\n* [Test](http://hackage.haskell.org/packages/#cat:Test) - a curated Hackage list.\n* [Testing](http://hackage.haskell.org/packages/#cat:Testing) - a curated Hackage list.\n* [Logging](http://hackage.haskell.org/packages/#cat:Logging) - a curated Hackage list.\n* [CLI Tool](http://hackage.haskell.org/packages/#cat:CLI Tool) - a curated Hackage list.\n* [Monitoring](http://hackage.haskell.org/packages/#cat:Monitoring) - a curated Hackage list.\n\n## Distributed Computing\n\n* [Distributed Computing](http://hackage.haskell.org/packages/#cat:Distributed Computing) - a curated Hackage list.\n\n    ---\n* [Cloud Haskell](http://haskell-distributed.github.io/) - concurrent and distributed programming in Haskell.\n\n\n## Documentation\n\n* [Documentation](http://hackage.haskell.org/packages/#cat:Documentation) - a curated Hackage list.\n\n## Editors\n\n* [Editors written in Haskell](http://www.haskell.org/haskellwiki/Applications_and_libraries/Editors) - Official Website Resources.\n* [editors for Haskell](http://www.haskell.org/haskellwiki/Editors) - Official Website Resources.\n\n## Extensions\n\n* [Extended Haskell](http://www.haskell.org/haskellwiki/Applications_and_libraries/Extended_Haskell) - Official Website Resources.\n\n## Games\n* [Games](http://www.haskell.org/haskellwiki/Applications_and_libraries/Games) - Official Website Resources.\n\n    ---\n* [Game](http://hackage.haskell.org/packages/#cat:Game) - a curated Hackage list.\n* [Game Engine](http://hackage.haskell.org/packages/#cat:Game Engine) - a curated Hackage list.\n\n## GUI\n* [Graphical User Interface (GUI) Libraries](http://www.haskell.org/haskellwiki/Applications_and_libraries/GUI_libraries) - Official Website Resources.\n\n    ---\n* [GUI](http://hackage.haskell.org/packages/#cat:GUI) - a curated Hackage list.\n* [User Interfaces](http://hackage.haskell.org/packages/#cat:User Interfaces) - a curated Hackage list.\n\n## Graphics\n* [Graphics](http://www.haskell.org/haskellwiki/Applications_and_libraries/Graphics) - Official Website Resources.\n\n    ---\n* [Graphics](http://hackage.haskell.org/packages/#cat:Graphics) - a curated Hackage list.\n\n## Network\n\n* [Network](http://www.haskell.org/haskellwiki/Applications_and_libraries/Network) - Official Website Resources\n\n    ---\n* [Network](http://hackage.haskell.org/packages/#cat:Network) - a curated Hackage list.\n\n## Number Theory\n\n* [Number Theory](http://hackage.haskell.org/packages/#cat:Number Theory) - a curated Hackage list.\n* [Numeric](http://hackage.haskell.org/packages/#cat:Numeric) - a curated Hackage list.\n* [Numerical](http://hackage.haskell.org/packages/#cat:Numerical) - a curated Hackage list.\n* [Math](http://hackage.haskell.org/packages/#cat:Math) - a curated Hackage list.\n\n\n## Web / Frameworks\n\n* [Web Servers](http://www.haskell.org/haskellwiki/Web/Servers) - Official Website Resources.\n* [Web Frameworks](http://www.haskell.org/haskellwiki/Web/Frameworks) - Official Website Resources.\n* [Cloud](http://www.haskell.org/haskellwiki/Web/Cloud) - Official Website Resources.\n* [Deploy](http://www.haskell.org/haskellwiki/Web/Deploy) - Official Website Resources.\n* [Libraries](http://www.haskell.org/haskellwiki/Web/Libraries) - Official Website Resources.\n* [Interfaces to Frameworks]() - Official Website Resources.\n* [Database adn Persistence](http://www.haskell.org/haskellwiki/Web/Databases_and_Persistence) - Official Website Resources.\n* [Testing and Verification](http://www.haskell.org/haskellwiki/Web/Testing_and_Verification) - Official Website Resources.\n* [CMS](http://www.haskell.org/haskellwiki/Web/Content_Management) - Official Website Resources for Content Management Systems (CMS).\n\n    ---\n* [Web](http://hackage.haskell.org/packages/#cat:Web) - a curated Hackage list of frameworks, libraries, ...\n\n    ---\n*Additional libraries*\n* [HTTP](https://github.com/haskell/HTTP) - Haskell HTTP package. Supports client-side web programming in Haskell.\n* [hoauth2](https://github.com/freizl/hoauth2) - a lightweight oauth2 haskell binding.\n\n## Text Processing\n\n* [Pandoc](http://johnmacfarlane.net/pandoc/) - is a library for converting from one markup format to another, and a command-line tool that uses this library.\n \n\n## Messaging\n\n* [Stomp](http://stomp.github.io/) - is the Simple (or Streaming) Text Orientated Messaging Protocol. [Resources](http://hackage.haskell.org/packages/#cat:Stomp).\n* [amqp](https://github.com/hreinhardt/amqp) - client library for AMQP servers (currently only RabbitMQ).\n* [IRC](http://hackage.haskell.org/packages/#cat:IRC) - a curated Hackage list for Internet Relay Chat (IRC).\n* [IRC Client](http://hackage.haskell.org/packages/#cat:IRC Client) - a curated Hackage list.\n\n## Languages\n\n* [Tools for interfacing with other languages](http://www.haskell.org/haskellwiki/Applications_and_libraries/Interfacing_other_languages) - Official Website Resources.\n\n    ---\n* [Code Generation](http://hackage.haskell.org/packages/#cat:Code Generation) - a curated Hackage list.\n* [FFI](http://hackage.haskell.org/packages/#cat:FFI) - a curated Hackage list.\n* [FFI Tools](http://hackage.haskell.org/packages/#cat:FFI Tools) - a curated Hackage list.\n* [HTML](http://hackage.haskell.org/packages/#cat:HTML) - a curated Hackage list.\n* [Java](http://hackage.haskell.org/packages/#cat:Java) - a curated Hackage list.\n* [Javascript](http://hackage.haskell.org/packages/#cat:Javascript) - a curated Hackage list.\n* [LaTex](http://hackage.haskell.org/packages/#cat:LaTeX) - a curated Hackage list.\n* [Lua](http://hackage.haskell.org/packages/#cat:LUA) - a curated Hackage list.\n    \n    ---\n*Additional languages on top of Haskell*\n* [Fay](http://fay-lang.org/) - a proper subset of Haskell that compiles to JavaScript.\n* [Idris](https://github.com/idris-lang/Idris-dev) - A Dependently Typed Functional Programming Language\n* [Copilot](http://leepike.github.io/Copilot/) - a (Haskell DSL) stream language for generating hard real-time C code.\n\n## Operating Systems\n\n* [Operating systems and systems programming](http://www.haskell.org/haskellwiki/Applications_and_libraries/Operating_system) - Official Website Resources.\n\n    ---\n* [BSD](http://hackage.haskell.org/packages/#cat:BSD) - a curated Hackage list.\n* [Fedora](http://hackage.haskell.org/packages/#cat:Fedora) - a curated Hackage list.\n* [Gentoo](http://hackage.haskell.org/packages/#cat:Gentoo) - a curated Hackage list.\n* [Linux](http://hackage.haskell.org/packages/#cat:Linux) - a curated Hackage list.\n* [System](http://hackage.haskell.org/packages/#cat:System) - a curated Hackage list.\n\n## Platforms\n\n* [.NET](http://hackage.haskell.org/packages/#cat:.NET) - a curated Hackage list.\n* [Apple](http://hackage.haskell.org/packages/#cat:Apple) - a curated Hackage list.\n* [JVM](http://hackage.haskell.org/packages/#cat:JVM) - a curated Hackage list.\n* [Mobile](http://hackage.haskell.org/packages/#cat:Mobile) - a curated Hackage list.\n\n## Programming\n\n* [Generic Programming](http://www.haskell.org/haskellwiki/Applications_and_libraries/Generic_programming) - Official Website Resources.\n\n    ---\n* [Aspect Oriented Programming](http://hackage.haskell.org/packages/#cat:Aspect Oriented Programming) - a curated Hackage list.\n* [Generic Programming](http://hackage.haskell.org/packages/#cat:Generics) - a curated Hackage list.\n* [Logic Programming](http://hackage.haskell.org/packages/#cat:Logic) - a curated Hackage list.\n* [Reactive Programming](http://hackage.haskell.org/packages/#cat:Reactivity) - a curated Hackage list.\n* [Visual Programming](http://hackage.haskell.org/packages/#cat:Visual Programming) - a curated Hackage list.\n\n## Science\n\n* [Bioinformatics](http://www.haskell.org/haskellwiki/Applications_and_libraries/Bioinformatics) - Official Website Resources.\n* [Mathematics & Physics](http://www.haskell.org/haskellwiki/Applications_and_libraries/Mathematics) - Official Website Resources.\n\n    ---\n* [Chemistry](http://hackage.haskell.org/packages/#cat:Chemistry) - a curated Hackage list.\n* [Bioinformatics](http://hackage.haskell.org/packages/#cat:Bioinformatics) - a curated Hackage list.\n* [Finance](http://hackage.haskell.org/packages/#cat:Finance) - a curated Hackage list.\n* [Physics](http://hackage.haskell.org/packages/#cat:Physics) - a curated Hackage list.\n* [Science](http://hackage.haskell.org/packages/#cat:Science) - a curated Hackage list.\n* [Scientific Simulation](http://hackage.haskell.org/packages/#cat:Scientific Simulation) - a curated Hackage list.\n\n## Streaming Processing\n\n* [Conduit](https://github.com/snoyberg/conduit) - a streaming data library. [Resources](http://hackage.haskell.org/packages/#cat:Conduit).\n* [IO-Streams](http://hackage.haskell.org/packages/#cat:IO-Streams) - a curated Hackage list.\n* [Pipes](https://github.com/Gabriel439/Haskell-Pipes-Library) - is a clean and powerful stream processing library that lets you build and connect reusable streaming components. [Resources](http://hackage.haskell.org/packages/#cat:Pipes).\n\n# Resources\n\n## Websites\n* [The Haskell Programming Language](http://www.haskell.org/haskellwiki/Haskell)\n* [Try Haskell](http://tryhaskell.org/) - Haskell Online.\n* [School of Haskell](https://www.fpcomplete.com/school) - Learning Haskell.\n\n## Community\n\n* [Reddit](http://www.reddit.com/r/haskell/)\n* [Stackoverflow](http://stackoverflow.com/questions/tagged?tagnames=haskell)\n* [G+](https://plus.google.com/communities/104818126031270146189)\n* [Mailing lists](http://www.haskell.org/haskellwiki/Mailing_lists)\n* [IRC channels](http://www.haskell.org/haskellwiki/IRC_channel)\n* [Local user groups](http://www.haskell.org/haskellwiki/User_groups)\n* [Planet Haskell](http://planet.haskell.org/)\n* [Haskell Communities and Activities Report](http://www.haskell.org/haskellwiki/Haskell_Communities_and_Activities_Report)\n\n## Courses\n\n* [Introduction to Functional Programming](https://www.edx.org/course/delftx/delftx-fp101x-introduction-functional-2126) - Fall 2014 MOOC on edX by DelftX featuring Haskell as the primary language of focus.\n\n## Packages\n\n* [Hackage](http://hackage.haskell.org/) - is the Haskell community's central package archive.\n* [Application & Libraries](http://www.haskell.org/haskellwiki/Applications_and_libraries) - Official collections and Guide.\n* [Hoogle](http://www.haskell.org/hoogle/) - is a Haskell API search engine, which allows you to search many standard Haskell libraries by either function name, or by approximate type signature.\n* [Hayoo](http://holumbus.fh-wedel.de/hayoo/hayoo.html) - will search all packages from Hackage, including all function and type definitions.\n\n## Tutorials\n\n* [Learn Haskell](http://www.haskell.org/haskellwiki/Learning_Haskell) - Official Learning Resources.\n* [Books](http://www.haskell.org/haskellwiki/Books) & [Tutorials](http://www.haskell.org/haskellwiki/Tutorials)\n* [learnhaskell](https://github.com/bitemyapp/learnhaskell) - Haskell Learning.\n* [wiwinwlh](http://dev.stephendiehl.com/hask/) - amazing guide for all kinds of things.\n* [LearnYouHaskell](http://learnyouahaskell.com/chapters) - Learn You a Haskell for Great Good!\n* [Revised report](http://www.haskell.org/onlinereport/) - Haskell 98 Language and Libraries. The Revised Report.\n\n\n### Video Tutorials\n\n* [Redoing Make - Haskell from Scratch](http://www.youtube.com/playlist?list=PLxj9UAX4Em-Ij4TKwKvo-SLp-Zbv-hB4B)\n* [Haskell - Code Deconstructed](http://www.youtube.com/playlist?list=PLxj9UAX4Em-IBXkvcC3MycLlcxyoi7v8B)\n* [Adventures in Haskell - A Calculator](http://www.youtube.com/playlist?list=PL_xuff3BkASMOzBr0hKVKLuSnU4UIinKx)\n* [Sed implementation in Haskell](http://www.youtube.com/playlist?list=PLUQzXLQ6jvHL_k3QOMKXehVoZdk-sKtHd)\n* [LazyCasts](http://www.youtube.com/user/LazyCasts)\n* [Haskell Development Workflow Demo](http://www.youtube.com/watch?v=Li6oaO8x2VY)\n* [Learn You a Haskell](https://www.youtube.com/watch?v=NBKnY7Z_w3I&list=PLPqPwGvHPSZB-urE6QFjKYt6AGXcZqJUh) - Video lectures to accompany the book \"Learn You a Haskell for Great Good!\"\n"
}