{
    "title": "Java",
    "url": "https://github.com/akullpp/awesome-java",
    "readme": "https://raw.githubusercontent.com/akullpp/awesome-java/master/README.md",
    "headingLevel": 2,
    "name": "java",
    "sections": [
        {
            "title": "Build Tool",
            "name": "build-tool"
        },
        {
            "title": "Bytecode Manipulation",
            "name": "bytecode-manipulation"
        },
        {
            "title": "Code Analysis",
            "name": "code-analysis"
        },
        {
            "title": "Compiler-compiler",
            "name": "compilercompiler"
        },
        {
            "title": "Continuous Integration",
            "name": "continuous-integration"
        },
        {
            "title": "Database",
            "name": "database"
        },
        {
            "title": "Date and Time",
            "name": "date-and-time"
        },
        {
            "title": "Dependency Injection",
            "name": "dependency-injection"
        },
        {
            "title": "Development",
            "name": "development"
        },
        {
            "title": "Distributed Applications",
            "name": "distributed-applications"
        },
        {
            "title": "Distribution",
            "name": "distribution"
        },
        {
            "title": "Document Processing",
            "name": "document-processing"
        },
        {
            "title": "Game Development",
            "name": "game-development"
        },
        {
            "title": "GUI",
            "name": "gui"
        },
        {
            "title": "High Performance",
            "name": "high-performance"
        },
        {
            "title": "IDE",
            "name": "ide"
        },
        {
            "title": "Imagery",
            "name": "imagery"
        },
        {
            "title": "JSON",
            "name": "json"
        },
        {
            "title": "JVM and JDK",
            "name": "jvm-and-jdk"
        },
        {
            "title": "Logging",
            "name": "logging"
        },
        {
            "title": "Machine Learning",
            "name": "machine-learning"
        },
        {
            "title": "Messaging",
            "name": "messaging"
        },
        {
            "title": "Miscellaneous",
            "name": "miscellaneous"
        },
        {
            "title": "Natural Language Processing",
            "name": "natural-language-processing"
        },
        {
            "title": "Networking",
            "name": "networking"
        },
        {
            "title": "ORM",
            "name": "orm"
        },
        {
            "title": "PDF",
            "name": "pdf"
        },
        {
            "title": "REST Frameworks",
            "name": "rest-frameworks"
        },
        {
            "title": "Science",
            "name": "science"
        },
        {
            "title": "Search",
            "name": "search"
        },
        {
            "title": "Security",
            "name": "security"
        },
        {
            "title": "Serialization",
            "name": "serialization"
        },
        {
            "title": "Server",
            "name": "server"
        },
        {
            "title": "Template Engine",
            "name": "template-engine"
        },
        {
            "title": "Testing",
            "name": "testing"
        },
        {
            "title": "Utility",
            "name": "utility"
        },
        {
            "title": "Web Crawling",
            "name": "web-crawling"
        },
        {
            "title": "Web Frameworks",
            "name": "web-frameworks"
        },
        {
            "title": "Communities",
            "name": "communities"
        },
        {
            "title": "Influential Books",
            "name": "influential-books"
        },
        {
            "title": "Podcasts",
            "name": "podcasts"
        },
        {
            "title": "Twitter",
            "name": "twitter"
        },
        {
            "title": "Websites",
            "name": "websites"
        }
    ],
    "repoTitle": "Awesome Java",
    "data": "# Awesome Java\n\nA curated list of awesome Java frameworks, libraries and software. Inspired by other [awesome lists](https://github.com/bayandin/awesome-awesomeness).\n\n- [Awesome Java](#awesome-java)\n    - [Build Tool](#build-tool)\n    - [Bytecode Manipulation](#bytecode-manipulation)\n    - [Code Analysis](#code-analysis)\n    - [Compiler-compiler](#compiler-compiler)\n    - [Continuous Integration](#continuous-integration)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Dependency Injection](#dependency-injection)\n    - [Development](#development)\n    - [Distributed Applications](#distributed-applications)\n    - [Distribution](#distribution)\n    - [Document Processing](#document-processing)\n    - [Game Development](#game-development)\n    - [GUI](#gui)\n    - [High Performance](#high-performance)\n    - [IDE](#ide)\n    - [Imagery](#imagery)\n    - [JSON](#json)\n    - [JVM and JDK](#jvm-and-jdk)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Messaging](#messaging)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Networking](#networking)\n    - [ORM](#orm)\n    - [PDF](#pdf)\n    - [REST Frameworks](#rest-frameworks)\n    - [Science](#science)\n    - [Search](#search)\n    - [Security](#security)\n    - [Serialization](#serialization)\n    - [Server](#server)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Utility](#utility)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n- [Resources](#resources)\n    - [Communities](#communities)\n    - [Influential Books](#influential-books)\n    - [Podcasts](#podcasts)\n    - [Twitter](#twitter)\n    - [Websites](#websites)\n- [Contributing](#contributing)\n\n## Build Tool\n\n*Tools which handle the buildcycle of an application.*\n\n* [Apache Maven](http://maven.apache.org/) - Declarative build and dependency management which favors convention over configuration. It's preferable to Apache Ant which uses a rather procedural approach and can be difficult to maintain.\n* [Gradle](http://www.gradle.org/) - Incremental builds which are programmed via Groovy instead of declaring XML. Works well with Maven's dependency management and treats Ant scripts as first-class citizens.\n\n## Bytecode Manipulation\n\n*Libraries to manipulate Java bytecode programmatically.*\n\n* [ASM](http://asm.ow2.org/) - All purpose, low level, bytecode manipulation and analysis.\n* [Javassist](http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/) - Tries to simplify the editing of bytecode.\n* [Byte Buddy](http://bytebuddy.net/) - Further simplifies bytecode generation with a fluent API.\n\n## Code Analysis\n\n*Tools that provide metrics and quality measurements.*\n\n* [Checkstyle](http://checkstyle.sourceforge.net/) - Static analysis of coding conventions and standards.\n* [FindBugs](http://findbugs.sourceforge.net/) - Static analysis of bytecode to find potential bugs.\n* [PMD](http://pmd.sourceforge.net/) - Source code analysis of bad coding practices.\n* [SonarQube](http://www.sonarqube.org/) - Integrates other analysis components via plugins and provides an overview of the metrics over time.\n\n## Compiler-compiler\n\n*Frameworks that help to create parsers, interpreters or compilers.*\n\n* [ANTLR](http://www.antlr.org/) - Complex full-featured framework for top-down parsing.\n* [JavaCC](https://javacc.java.net/) - More specific and slightly easier to learn. Has syntactic lookahead.\n\n## Continuous Integration\n\n*Tools which support continuously building, testing and releasing applications.*\n\n* [Bamboo](https://www.atlassian.com/software/bamboo) - Atlassian's CI solution with good integration of other products.\n* [CircleCI](https://circleci.com/) - Hosted service with a free trial.\n* [Codeship](https://www.codeship.io/features) - Hosted services with a limited free plan.\n* [Go](http://www.thoughtworks.com/products/go-continuous-delivery) - ThoughtWork's CI open source solution.\n* [Jenkins](http://jenkins-ci.org/) - Provides server-based deployment services.\n* [TeamCity](http://www.jetbrains.com/teamcity/) - JetBrain's CI solution with a free version.\n* [Travis](https://travis-ci.org) - Hosted service often used for open source projects.\n\n## Database\n\n*Everything which simplifies interactions with the database.*\n\n* [Flyway](http://flywaydb.org/) - Simple database migration with Java API.\n* [H2](http://h2database.com/) - Small SQL Database notable for its in-memory functionality.\n* [JDBI](http://jdbi.org/) - Convenient abstraction of JDBC.\n* [jOOQ](http://www.jooq.org/) - Generates typesafe code based on SQL schema.\n* [Presto](https://github.com/facebook/presto) - Distributed SQL query engine for big data.\n* [Querydsl](http://www.querydsl.com/) - Typesafe unified queries for Java.\n\n## Date and Time\n\n*Libraries related to handling date and time.*\n\n* [Joda-Time](http://www.joda.org/joda-time/) - De facto standard date/time-library before Java 8.\n* [Time4J](https://github.com/MenoData/Time4J) - Advanced date and time library for Java.\n\n## Dependency Injection\n\n*Libraries that help to realize the [Inversion of Control](http://en.wikipedia.org/wiki/Inversion_of_control) paradigm.*\n\n* [Dagger](http://square.github.io/dagger/) - Compile-time injection framework without reflection, mainly for Android.\n* [Guice](https://github.com/google/guice) - Lightweight but powerful framework that completes Dagger.\n\n## Development\n\n*Augmentation of the development process at a fundamental level.*\n\n* [AspectJ](https://eclipse.org/aspectj/) - Seamless aspect-oriented programming extension.\n* [Auto](https://github.com/google/auto) - Collection of source code generators.\n* [DCEVM](http://ssw.jku.at/dcevm/) - Modification of the JVM that allows unlimited redefinition of loaded classes at runtime. OpenJDK 7/8 are supported by [this fork](http://dcevm.github.io/).\n* [JRebel](http://zeroturnaround.com/software/jrebel/) - Commercial software that instantly reloads code and configuration changes without redeploys.\n* [Lombok](http://projectlombok.org/) - Code-generator which aims to reduce the verbosity of Java.\n* [RxJava](https://github.com/Netflix/RxJava) - Library for composing asynchronous and event-based programs using observable sequences from the JVM.\n* [Spring Loaded](https://github.com/spring-projects/spring-loaded) - Another class reloading agent for the JVM.\n* [vert.x](http://vertx.io/) - Polyglot event-driven application framework for the JVM.\n\n## Distributed Applications\n\n*Libraries and frameworks for writing distributed and fault-tolerant applications.*\n\n* [Akka](http://akka.io) - Toolkit and runtime for building concurrent, distributed, and fault tolerant event-driven applications.\n* [Apache Storm](http://storm.incubator.apache.org/) - Distributed realtime computation system.\n* [Apache ZooKeeper](http://zookeeper.apache.org/) - Coordination service with distributed configuration, synchronization, and naming registry for large distributed systems.\n* [Hazelcast](http://hazelcast.org/) - Distributed and highly scalable in-memory datagrid.\n* [Hystrix](https://github.com/Netflix/Hystrix) - Latency and Fault Tolerance for Distributed Systems.\n* [JGroups](http://www.jgroups.org/) - Toolkit for reliable messaging and creating clusters whose nodes can send messages to each other.\n* [Quasar](http://www.paralleluniverse.co/quasar/) - Lightweight threads and actors for the JVM.\n\n## Distribution\n\n*Tools which handle the distribution of Java applications in native formats.*\n\n* [Bintray](https://bintray.com/) - Version control for your binaries which handles the publishing. Can also be used with Maven or Gradle.\n* [IzPack](http://izpack.org/) - Setup authoring tool for cross-platform deployments.\n* [Launch4j](http://launch4j.sourceforge.net/) - Wraps JARs in lightweight and native Windows executables.\n* [packr](https://github.com/libgdx/packr#packr) - Packs your JAR, assets and JVM for native distribution on Windows, Linux and Mac OS X.\n\n## Document Processing\n\n*Libraries that assist with processing office document formats.*\n\n* [Apache POI](http://poi.apache.org/) - Supports OOXML (XLSX, DOCX, PPTX) as well as OLE2 (XLS, DOC or PPT).\n* [jOpenDocument](http://www.jopendocument.org/) - Processes the OpenDocument format.\n\n## Game Development\n\n*Frameworks that support the development of games.*\n\n* [jMonkeyEngine](http://jmonkeyengine.org/) - Game engine for modern 3D development.\n* [libGDX](http://libgdx.badlogicgames.com/) - All-round cross-platform, high-level framework.\n* [LWJGL](http://lwjgl.org/) - Robust framework that abstracts libraries like OpenGL/CL/AL.\n\n## GUI\n\n*Libraries to create modern graphical user interfaces.*\n\n* [JavaFX](http://www.oracle.com/technetwork/java/javase/overview/javafx-overview-2158620.html) - The successor of Swing.\n* [Scene Builder](http://www.oracle.com/technetwork/java/javase/downloads/javafxscenebuilder-info-2157684.html) - Visual layout tool for JavaFX applications.\n\n## High Performance\n\n*Everything about high performance computation, from collections to specific libraries.*\n\n* [Disruptor](http://lmax-exchange.github.io/disruptor/) - Inter-thread messaging library.\n* [fastutil](http://fastutil.di.unimi.it/) - Fast and compact type-specific collections for Java.\n* [GS Collections](https://github.com/goldmansachs/gs-collections) - Collection framework inspired by Smalltalk.\n* [hftc](https://github.com/OpenHFT/hftc) - Hash sets and hash maps.\n* [HPPC](http://labs.carrotsearch.com/hppc.html) - Primitive collections.\n* [Javolution](http://javolution.org/) - Library for real-time and embedded systems.\n* [Trove](http://trove.starlight-systems.com/) - Primitive collections.\n\n## IDE\n\n*Integrated development environments that try to simplify several aspects of development.*\n\n* [Eclipse](http://www.eclipse.org/) - Does a lot of things in the background. Noteworthy are its large amount of plugins.\n* [IntelliJ IDEA](http://www.jetbrains.com/idea/) - Supports a lot of JVM languages and provides good options for Android development. The commercial edition targets the enterprise sector.\n* [NetBeans](https://netbeans.org/) - Provides integration for several  Java SE and EE features starting with database access and servers to HTML5 and AngularJS.\n\n## Imagery\n\n*Libraries that assist with the creation, evaluation or manipulation of graphical images.*\n\n* [Picasso](http://square.github.io/picasso/) - Image downloading and caching library for Android.\n* [ZXing](https://github.com/zxing/zxing) - Multi-format 1D/2D barcode image processing library.\n\n## JSON\n\n*Libraries that simplify JSON processing.*\n\n* [Gson](https://code.google.com/p/google-gson/) - Serializes Java objects to JSON and vice versa. Good performance with on-the-fly usage.\n* [Jackson](http://wiki.fasterxml.com/JacksonHome) - Similar to GSON but has performance gains if you need to instantiate the library more often.\n\n## JVM and JDK\n\n*Current implementations of the JVM/JDK.*\n\n* [JDK 9](https://jdk9.java.net/) - Early access releases of JDK 9.\n* [OpenJDK](http://openjdk.java.net/) - Open source implementation.\n\n## Logging\n\n*Libraries that log the behavior of an application.*\n\n* [Apache Log4j 2](http://logging.apache.org/log4j/) - Complete rewrite of the previous version. Now has a powerful plugin and configuration architecture.\n* [kibana](http://www.elasticsearch.org/overview/kibana/) - Analyzes and visualizes log files.\n* [Logback](http://logback.qos.ch/) - Founded by the same developer as Log4j and proves to be a robust logging library with interesting configuration options via Groovy.\n* [logstash](http://logstash.net/) - Tool for managing log files.\n* [SLF4J](http://www.slf4j.org/) - Abstraction layer which is to be used with an implementation.\n\n## Machine Learning\n\n*Tools that provide specific statistical algorithms which allow to learn from data.*\n\n* [Apache Hadoop](http://hadoop.apache.org/) - Open-source software framework for storage and large-scale processing of data-sets on clusters of commodity hardware.\n* [Apache Mahout](https://mahout.apache.org/) - Scalable algorithms focused on collaborative filtering, clustering and classification.\n* [Apache Spark](http://spark.apache.org/) - Open-source data analytics cluster computing framework.\n* [h2o](http://0xdata.github.io/h2o/) - Analytics engine for statistics over big data.\n* [Weka](http://www.cs.waikato.ac.nz/ml/weka/) - Collection of algorithms for data mining tasks ranging from pre-processing to visualization.\n\n## Messaging\n\n*Tools that help sending messages between clients to ensure protocol independency.*\n\n* [Apache ActiveMQ](http://activemq.apache.org/) - Open-source message broker that implements JMS and converts synchronous to asynchronous communication.\n* [Apache Kafka](http://kafka.apache.org/) - High-throughput distributed messaging system.\n* [JBoss HornetQ](http://hornetq.jboss.org/) - Clear, concise, modular and made to be embedded.\n* [JeroMQ](https://github.com/zeromq/jeromq) - Pure Java implementation of ZeroMQ.\n\n## Miscellaneous\n\n*Everything else.*\n\n* [Design Patterns](https://github.com/iluwatar/java-design-patterns) - Implementation and explanation of the most common design patterns.\n* [Jimfs](https://github.com/google/jimfs) - In-memory file system.\n* [Lanterna](https://code.google.com/p/lanterna/) - Easy console text GUI library similar to curses.\n* [LightAdmin](http://lightadmin.org/) - Pluggable CRUD UI library for rapid application development.\n* [Metrics](http://metrics.codahale.com/) - Create your own metrics or add them for supported frameworks, then expose them via JMX or HTTP, or send them to a database.\n* [OpenRefine](http://openrefine.org/) -  Tool for working with messy data: cleaning, transforming, extending it with web services and linking it to databases.\n* [RoboVM](http://www.robovm.org/) - Write native iOS apps in Java.\n\n## Natural Language Processing\n\n*Libraries that specialize on processing text.*\n\n* [Apache OpenNLP](https://opennlp.apache.org/) - Toolkit for common tasks like tokenization.\n* [CoreNLP](http://nlp.stanford.edu/software/corenlp.shtml) - Stanford's CoreNLP provides a set of fundamental tools for tasks like tagging, named entity recognition, sentiment analysis and many more.\n* [LingPipe](http://alias-i.com/lingpipe/) - Toolkit for a variety of tasks ranging from POS tagging to sentiment analysis.\n* [Mallet](http://mallet.cs.umass.edu/) - Statistical natural language processing, document classification, clustering, topic modeling and more.\n\n## Networking\n\n*Libraries for network programming.*\n\n* [Netty](http://netty.io/) - A framework for building high performance network applications.\n* [OkHttp](http://square.github.io/okhttp/) - An HTTP+SPDY client for Android and Java applications.\n\n## ORM\n\n*APIs which handle the persistence of objects.*\n\n* [EclipseLink](https://www.eclipse.org/eclipselink/) - Supports a number of persistence standards: JPA, JAXB, JCA and SDO.\n* [Hibernate](http://hibernate.org/orm/) - Robust and widely used with an active community.\n* [Ebean](http://ebean-orm.github.io/) - ORM Framework that provides fast data access and even faster coding.\n\n## PDF\n\n*Everything that helps with the creation of PDF files.*\n\n* [Apache FOP](http://xmlgraphics.apache.org/fop/) - Creates PDF from XSL-FO.\n* [Apache PDFBox](http://pdfbox.apache.org/) - Toolbox for creating and manipulating PDF.\n* [DynamicReports](http://dynamicreports.org/) - Simplifies JasperReports.\n* [iText](http://itextpdf.com/) - Easy to use PDF library which creates PDF files programmatically but requires a license for commercial purposes.\n* [JasperReports](http://community.jaspersoft.com/project/jasperreports-library) - Complex reporting engine.\n\n## REST Frameworks\n\n*Frameworks specifically for creating RESTful services.*\n\n* [Dropwizard](https://dropwizard.github.io/dropwizard/) - Opinionated framework for setting up modern web applications, includes Jetty, Jackson, Jersey and Metrics.\n* [Jersey](https://jersey.java.net/) - JAX-RS reference implementation.\n* [RESTEasy](http://resteasy.jboss.org/) - Fully certified and portable implementation of the JAX-RS specification.\n* [Retrofit](http://square.github.io/retrofit/) - A type-safe REST client for Java.\n* [Spark](http://www.sparkjava.com/) - A Sinatra inspired framework for java.\n* [Swagger](https://helloreverb.com/developers/swagger) - Swagger is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services.\n\n## Science\n\n*Libraries for scientific computing and analysis.*\n\n* [SCaVis](http://jwork.org/scavis/) - Environment for scientific computation, data analysis and data visualization.\n\n## Search\n\n*Engines which index documents for search and analysis.*\n\n* [Apache Solr](http://lucene.apache.org/solr/) - Full enterprise search engine optimized for high volume traffic.\n* [Elasticsearch](http://www.elasticsearch.org/) - Distributed, multitenant-capable full-text search engine with a RESTful web interface and schema-free JSON documents.\n\n## Security\n\n*Libraries that handle security, authentication, authorization or session management.*\n\n* [Apache Shiro](http://shiro.apache.org/) - Performs authentication, authorization, cryptography and session management.\n* [Cryptomator](http://cryptomator.org/) - Multiplatform transparent client-side encryption of files in the cloud.\n* [Keycloak](http://keycloak.jboss.org/) - Integrated SSO and IDM for browser apps and RESTful web services. Currently in beta but looks very promising.\n* [PicketLink](http://picketlink.org/) - PicketLink is an umbrella project for security and identity management for Java applications.\n* [Spring Security](http://projects.spring.io/spring-security/) - Focuses on authentication/authorization and protects against several attack vectors.\n\n## Serialization\n\n*Libraries that handle serialization with high efficiency.*\n\n* [FlatBuffers](https://github.com/google/flatbuffers) - Memory efficient serialization library that can access serialized data without unpacking and parsing it.\n* [Kryo](https://github.com/EsotericSoftware/kryo) - Fast and efficient object graph serialization framework.\n* [MessagePack](https://github.com/msgpack/msgpack-java) - Efficient binary serialization format.\n\n## Server\n\n*Servers which are specifically used to deploy applications.*\n\n* [Apache Tomcat](http://tomcat.apache.org/) - Robust all-round server for Servlet and JSP.\n* [Apache TomEE](http://tomee.apache.org/) - Tomcat plus Java EE.\n* [GlassFish](https://glassfish.java.net/) - Open source reference implementation for Java EE sponsored by Oracle.\n* [Jetty](http://www.eclipse.org/jetty/) - Lightweight, small server, often embedded in projects.\n* [WildFly](http://www.wildfly.org/) - Formerly known as JBoss and developed by Red Hat with extensive Java EE support.\n\n## Template Engine\n\n*Tools which substitute expressions in a template.*\n\n* [Apache Velocity](http://velocity.apache.org/) - Templates for HTML pages, emails or source code generation in general.\n* [FreeMarker](http://freemarker.org/) - General templating engine without any heavyweight or opinionated dependencies.\n* [Handlebars.java](http://jknack.github.io/handlebars.java/) - Logic-less and semantic Mustache templates with Java.\n* [JavaServer Pages](https://jsp.java.net/) - Common templating for websites with custom tag libraries.\n* [Thymeleaf](http://www.thymeleaf.org/) - Aims to be a substitute for JSP and works for XML files in general.\n\n## Testing\n\n*Tools that test from object to interface level including performance and other benchmarks.*\n\n* [Apache JMeter](http://jmeter.apache.org/) - Functional testing and performance measurements.\n* [Arquillian](http://arquillian.org/) - Integration and functional testing platform with integration of Java EE containers.\n* [AssertJ](http://joel-costigliola.github.io/assertj/) - Fluent assertions that improve readability.\n* [JMH](http://openjdk.java.net/projects/code-tools/jmh/) - Microbenchmarking tool for the JVM.\n* [JUnit](http://junit.org/) - Common testing framework.\n* [Mockito](http://code.google.com/p/mockito/) - Creation of test double objects in automated unit tests for the purpose of TDD or BDD.\n* [Selenium](http://docs.seleniumhq.org/) - Portable software testing framework for web applications.\n* [Selenide](http://selenide.org/) - Concise API around Selenium to write stable and readable UI tests.\n* [TestNG](http://testng.org/) - Testing framework.\n* [VisualVM](http://visualvm.java.net/) - Visual interface for detailed information about running applications.\n\n## Utility\n\n*Libraries which provide general utility functions.*\n\n* [Apache Commons](http://commons.apache.org/) - Provides different general purpose functions like configuration, validation, collections, file upload or XML processing.\n* [Guava](http://code.google.com/p/guava-libraries/) - Collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O, and so forth.\n* [javatuples](http://www.javatuples.org/) - Does what it says, although the concept of tuples in general is debatable.\n\n## Web Crawling\n\n*Libraries that analyze the content of websites.*\n\n* [Apache Nutch](http://nutch.apache.org/) - Highly extensible, highly scalable Web crawler for production environment.\n* [Crawler4j](https://code.google.com/p/crawler4j/) - Simple lightweight alternative.\n* [JSoup](http://jsoup.org/) - Scrapes, parses, manipulates and cleans HTML.\n\n## Web Frameworks\n\n*Frameworks that handle the communication between the layers of an web application.*\nh\n* [Apache Tapestry](http://tapestry.apache.org/) - Component oriented framework for creating dynamic, robust, highly scalable web applications in Java.\n* [Apache Wicket](http://wicket.apache.org/) - Component-based web application framework similar to Tapestry with a stateful GUI.\n* [Google Web Toolkit](http://www.gwtproject.org/) - Toolbox which includes a Java-to-JavaScript compiler for client-side code, XML parser, API for RPC, JUnit integration, internationalization support and widgets for the GUI.\n* [Grails](https://grails.org/) - Groovy framework with the aim to provide a highly productive environment by favoring convention over configuration, no XML and support for mixins.\n* [Play](http://www.playframework.com/) - Uses convention over configuration, hot code reloading and display of errors in the browser.\n* [PrimeFaces](http://primefaces.org/) - JSF framework which has a free and a commercial version with support. Provides several frontend components.\n* [Spring Boot](http://projects.spring.io/spring-boot/) - Microframework which simplifies the development of new Spring applications.\n* [Spring](http://projects.spring.io/spring-framework/) - Aims to simplify the development with Java EE and provides packages for dependency injection and aspect-oriented programming.\n* [Vaadin](https://vaadin.com/) - Event-driven framework build on top of GWT. Uses server-side architecture with Ajax on the client-side.\n* [Ninja](http://www.ninjaframework.org/) - Full stack web framework for Java. Rock solid, fast and super productive.\n* [Ratpack](http://www.ratpack.io/) - A set of Java libraries that facilitate fast, efficient, evolvable and well tested HTTP applications.\n\n# Resources\n\n## Communities\n\n*Active discussions.*\n\n* [r/java](http://www.reddit.com/r/java) - Subreddit for the Java community.\n* [stackoverflow](http://stackoverflow.com/questions/tagged/java) - Question/answer platform.\n\n## Influential Books\n\n*Books about Java that had a high impact and are still worth reading.*\n\n* [Effective Java (2nd Edition)](http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683)\n* [Java Concurrency in Practice](http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601)\n* [Thinking in Java](http://www.amazon.com/Thinking-Java-Edition-Bruce-Eckel/dp/0131872486)\n\n## Podcasts\n\n*Something to listen to while programming.*\n\n* [The Java Posse](http://www.javaposse.com/)\n\n## Twitter\n\n*Active accounts to follow.*\n\n* [Adam Bien](https://twitter.com/AdamBien/) - Freelancer: Author, JavaONE Rockstar Speaker, Consultant, Java Champion.\n* [Antonio Goncalves](https://twitter.com/agoncal/) - Java Champion, JUG Leader, Devoxx France, Java EE 6/7, JCP, Author.\n* [Arun Gupta](https://twitter.com/arungupta/) - Java Champion, JavaOne Rockstar, UG Leader, Devoxx4Kids-er, Red Hatter.\n* [Bruno Borges](https://twitter.com/brunoborges) - Product Manager/Java Jock at Oracle.\n* [Ed Burns](https://twitter.com/edburns) - Consulting Member of the Technical Staff at Oracle.\n* [Eugen Paraschiv](https://twitter.com/baeldung) - Author of the Spring Security Course.\n* [James Weaver](https://twitter.com/JavaFXpert) - Java/JavaFX/IoT developer, author and speaker.\n* [Java EE](https://twitter.com/Java_EE/) - Official Java EE Twitter account.\n* [Java Magazine](https://twitter.com/Oraclejavamag) - Official Java Magazine account.\n* [Java.net](https://twitter.com/javanetbuzz/) - Official Java.net account.\n* [Java](https://twitter.com/java/) - Official Java Twitter account.\n* [Javin Paul](https://twitter.com/javinpaul) - Well-known Java blogger.\n* [Lukas Eder](https://twitter.com/lukaseder) - Founder and CEO Data Geekery (jOOQ).\n* [Mario Fusco](https://twitter.com/mariofusco) - RedHatter, JUG coordinator, frequent speaker and author.\n* [Mark Reinhold](https://twitter.com/mreinhold) - Chief Architect, Java Platform Group, Oracle.\n* [Martijn Verburg](https://twitter.com/karianna) - London JUG co-leader, speaker, author, Java Champion and much more.\n* [OpenJDK](https://twitter.com/OpenJDK) - Official OpenJDK account.\n* [Reza Rahman](https://twitter.com/reza_rahman) - Java EE/GlassFish/WebLogic evangelist, author, speaker, open source hacker.\n* [Simon Maple](https://twitter.com/sjmaple) - Java Champion, virtualJUG founder, LJC leader, RebelLabs author.\n* [Stephen Colebourne](https://twitter.com/jodastephen) - Java Champion, speaker.\n* [Tim Boudreau](https://twitter.com/kablosna) - Author and NetBeans guru.\n* [Trisha Gee](https://twitter.com/trisha_gee) - Java Champion and speaker.\n\n## Websites\n\n*Sites to read.*\n\n* [Google Java Style](http://google-styleguide.googlecode.com/svn/trunk/javaguide.html)\n* [InfoQ](http://www.infoq.com/)\n* [Java Code Geeks](http://www.javacodegeeks.com/)\n* [Java.net](http://java.net/)\n* [Javalobby](http://java.dzone.com/)\n* [JavaWorld](http://www.javaworld.com/)\n* [RebelLabs](http://zeroturnaround.com/rebellabs/)\n* [The Java Specialist' Newsletter](http://www.javaspecialists.eu/archive/archive.jsp)\n* [TheServerSide.com](http://www.theserverside.com/)\n* [Thoughts On Java](http://www.thoughts-on-java.org/)\n\n# Contributing\n\nContributions are very welcome!\n\nPlease have a look at [CONTRIBUTING](https://github.com/akullpp/awesome-java/blob/master/CONTRIBUTING.md) for guidelines.\n"
}